// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	"github.com/go-kit/kit/endpoint"
	"github.com/lukaszozimek/organization_service/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateUserOrganizationByIdEndpoint endpoint.Endpoint
	DeleteUserOrganizationByIdEndpoint endpoint.Endpoint
	GetUserOrganizationByIdEndpoint    endpoint.Endpoint
	GetUserOrganizationsEndpoint       endpoint.Endpoint
	UpdateUserOrganizationByIdEndpoint endpoint.Endpoint
	Health                             endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.OrganizationService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateUserOrganizationByIdEndpoint: MakeCreateUserOrganizationByIdEndpoint(s),
		DeleteUserOrganizationByIdEndpoint: MakeDeleteUserOrganizationByIdEndpoint(s),
		GetUserOrganizationByIdEndpoint:    MakeGetUserOrganizationByIdEndpoint(s),
		GetUserOrganizationsEndpoint:       MakeGetUserOrganizationsEndpoint(s),
		UpdateUserOrganizationByIdEndpoint: MakeUpdateUserOrganizationByIdEndpoint(s),
		Health:                             MakeHealthEndpoint(s),
	}
	for _, m := range mdw["CreateUserOrganizationById"] {
		eps.CreateUserOrganizationByIdEndpoint = m(eps.CreateUserOrganizationByIdEndpoint)
	}
	for _, m := range mdw["DeleteUserOrganizationById"] {
		eps.DeleteUserOrganizationByIdEndpoint = m(eps.DeleteUserOrganizationByIdEndpoint)
	}
	for _, m := range mdw["GetUserOrganizationById"] {
		eps.GetUserOrganizationByIdEndpoint = m(eps.GetUserOrganizationByIdEndpoint)
	}
	for _, m := range mdw["GetUserOrganizations"] {
		eps.GetUserOrganizationsEndpoint = m(eps.GetUserOrganizationsEndpoint)
	}
	for _, m := range mdw["UpdateUserOrganizationById"] {
		eps.UpdateUserOrganizationByIdEndpoint = m(eps.UpdateUserOrganizationByIdEndpoint)
	}
	for _, m := range mdw["Health"] {
		eps.Health = m(eps.Health)
	}
	return eps
}
